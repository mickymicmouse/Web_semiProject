/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2021-05-15 08:45:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.crazy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class crazywrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/views/crazy/home.jsp", Long.valueOf(1621003953599L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1620963385230L));
    _jspx_dependants.put("jar:file:/C:/dev/semiproject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/crazy/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>글쓰기</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".select_img img {\r\n");
      out.write("\tmargin: 20px 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script async\r\n");
      out.write("\tsrc=\"https://www.googletagmanager.com/gtag/js?id=UA-175462567-1\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("            window.dataLayer = window.dataLayer || [];\r\n");
      out.write("            function gtag() {\r\n");
      out.write("                dataLayer.push(arguments);\r\n");
      out.write("            }\r\n");
      out.write("            gtag('js', new Date());\r\n");
      out.write("\r\n");
      out.write("            gtag('config', 'UA-175462567-1');\r\n");
      out.write("        </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>home</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-2.2.3.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- css -->\r\n");
      out.write("<style>\r\n");
      out.write("nav {\r\n");
      out.write("\tmargin: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-color: #FFD9EC;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul {\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tborder-top: 2px solid #D9418C;\r\n");
      out.write("\tborder-bottom: 2px solid #D9418C;\r\n");
      out.write("\tpadding: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li {\r\n");
      out.write("\tdisplay: inline;\r\n");
      out.write("\ttext-transform: uppercase;\r\n");
      out.write("\tpadding: 0 10px;\r\n");
      out.write("\tletter-spacing: 10px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li a {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tcolor: #AB195E;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul li a:hover {\r\n");
      out.write("\ttext-decoration: underline;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!-- 로그인, 회원가입, 로그아웃 -->\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div style=\"text-align: right; color: #D9418C;\">\r\n");
      out.write("\t\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 로고 -->\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<h1 class=\"text-center\">\r\n");
      out.write("\t\t\t<a href=\"home.do\"><center>\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("\t\t\t\t</center></a>\r\n");
      out.write("\t\t</h1>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("\t<!-- nav -->\r\n");
      out.write("\t<nav>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><b><a href=\"crazyboard.do\">게시판</a></b></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<form action=\"crazywriteaction.do\" style=\"color: #D9418C;\"\r\n");
      out.write("\t\t\t\tmethod=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t\t<table class=\"table table-striped\"\r\n");
      out.write("\t\t\t\t\tstyle=\"border: 2px solid #FFFFFF; text-align: center; background-color: white;\">\r\n");
      out.write("\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<th colspan=\"2\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"background-color: #eeeeee; text-align: center;\">글쓰기</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"text\" placeholder=\"subject\" id=\"subject\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"subject\" class=\"form-control\"></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><textarea rows=\"10\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"content\" id=\"content\" name=\"content\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr></tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><div class=\"inputArea\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<label for=\"imagePreview\">이미지</label> <input type=\"file\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"imageUpload\" name=\"file\" style=\"display: none;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img id=\"imagePreview\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tonclick=\"imageUpload.click()\" style=\"margin: 20px\">이미지\r\n");
      out.write("\t\t\t\t\t\t\t\t\t업로드</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-success\" id=\"delbutton\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstyle=\"display: none\">이미지 삭제</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card\" style=\"margin: 30px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"label-container\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td><textarea rows=\"2\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\tplaceholder=\"description\" id=\"description\" name=\"description\"\r\n");
      out.write("\t\t\t\t\t\t\t\tstyle=\"display: none;\"></textarea></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"2\"><input type=\"submit\" id=\"change\"\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background-color: #D9418C; color: white;\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btn-default pull-right\" value=\"등록\" /> <input\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"button\" style=\"background-color: #D9418C; color: white;\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btn-default pull-right\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"javascript:location.href='crazyboard.do'\" value=\"글목록\" />\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"fb-root\"></div>\r\n");
      out.write("\t<script async defer crossorigin=\"anonymous\"\r\n");
      out.write("\t\tsrc=\"https://connect.facebook.net/ko_KR/sdk.js#xfbml=1&version=v8.0\"\r\n");
      out.write("\t\tnonce=\"HFQk7fNn\"></script>\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"\r\n");
      out.write("\t\tintegrity=\"sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV\"\r\n");
      out.write("\t\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"fb-comments\" data-href=\"https://bokyeong-kim.github.io/\"\r\n");
      out.write("\t\tdata-numposts=\"5\" data-width=\"\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js\"></script>\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("            const URL = '/crazy/resources/my_model/';\r\n");
      out.write("\t\t\r\n");
      out.write("            let model, webcam, labelContainer, maxPredictions;\r\n");
      out.write("\r\n");
      out.write("            var labeling = {\r\n");
      out.write("                    김치볶음밥: { kcal: 495, comment: '= 런닝머신 31분 하기' },\r\n");
      out.write("                    간장게장: { kcal: 397, comment: '= 스쿼트 267분 하기' },\r\n");
      out.write("                    갈비찜: { kcal: 530, comment: '= 등산 130분 하기' },\r\n");
      out.write("                    공기밥: { kcal: 313, comment: '= 윗몸일으키기 119분 하기' },\r\n");
      out.write("                    김밥: { kcal: 240, comment: '= 계단 36분 걷기' },\r\n");
      out.write("                    녹차라떼: { kcal: 88.7, comment: '= 1개 먹을때마다 37분 요가하기' },\r\n");
      out.write("                    돈가스: { kcal: 446, comment: '= 51분동안 수영하기' },\r\n");
      out.write("                    된장찌개: { kcal: 310, comment: '= 런닝머신 31분 하기' },\r\n");
      out.write("                    떡볶이: { kcal: 1800, comment: '= 스쿼트 267분 하기' },\r\n");
      out.write("                    라면: { kcal: 1000, comment: '= 등산 130분 하기' },\r\n");
      out.write("                    막창: { kcal: 918, comment: '= 윗몸일으키기 119분 하기' },\r\n");
      out.write("                    맥주: { kcal: 240, comment: '= 계단 36분 걷기' },\r\n");
      out.write("                    미역국: { kcal: 88.7, comment: '= 1개 먹을때마다 37분 요가하기' },\r\n");
      out.write("                    바나나: { kcal: 446, comment: '= 51분동안 수영하기' },\r\n");
      out.write("                    방울토마토: { kcal: 310, comment: '= 런닝머신 31분 하기' },\r\n");
      out.write("                    붕어빵: { kcal: 1800, comment: '= 스쿼트 267분 하기' },\r\n");
      out.write("                    비빔밥: { kcal: 1000, comment: '= 등산 130분 하기' },\r\n");
      out.write("                    닭발: { kcal: 918, comment: '= 윗몸일으키기 119분 하기' },\r\n");
      out.write("                    사과: { kcal: 240, comment: '= 계단 36분 걷기' },\r\n");
      out.write("                    삼계탕: { kcal: 88.7, comment: '= 1개 먹을때마다 37분 요가하기' },\r\n");
      out.write("                    삼겹살: { kcal: 446, comment: '= 51분동안 수영하기' },\r\n");
      out.write("                    소주: { kcal: 310, comment: '= 런닝머신 31분 하기' },\r\n");
      out.write("                    순대: { kcal: 1800, comment: '= 스쿼트 267분 하기' },\r\n");
      out.write("                    스콘: { kcal: 1000, comment: '= 등산 130분 하기' },\r\n");
      out.write("                    스테이크: { kcal: 918, comment: '= 윗몸일으키기 119분 하기' },\r\n");
      out.write("                    아이스아메리카노: { kcal: 240, comment: '= 계단 36분 걷기' },\r\n");
      out.write("                    연어회: { kcal: 88.7, comment: '= 1개 먹을때마다 37분 요가하기' },\r\n");
      out.write("                    오므라이스: { kcal: 446, comment: '= 51분동안 수영하기' },\r\n");
      out.write("                    와플: { kcal: 1000, comment: '= 등산 130분 하기' },\r\n");
      out.write("                    우유: { kcal: 918, comment: '= 윗몸일으키기 119분 하기' },\r\n");
      out.write("                    조각케이크: { kcal: 240, comment: '= 계단 36분 걷기' },\r\n");
      out.write("                    짜장면: { kcal: 88.7, comment: '= 1개 먹을때마다 37분 요가하기' },\r\n");
      out.write("                    초밥: { kcal: 446, comment: '= 51분동안 수영하기' },\r\n");
      out.write("                    치킨: { kcal: 310, comment: '= 런닝머신 31분 하기' },\r\n");
      out.write("                    칼국수: { kcal: 1800, comment: '= 스쿼트 267분 하기' },\r\n");
      out.write("                    캔콜라: { kcal: 1000, comment: '= 등산 130분 하기' },\r\n");
      out.write("                    피자: { kcal: 918, comment: '= 윗몸일으키기 119분 하기' }\r\n");
      out.write("                };\r\n");
      out.write("\t\t\t\r\n");
      out.write("            var randomtxt = ['먹어봤자 내가 아는 그맛이다'\r\n");
      out.write("                , '뚱뚱하면 굶어서라도 빼야한다.'\r\n");
      out.write("                , '인생은 살이 쪘을 때와 안 쪘을 때로 나뉜다.'\r\n");
      out.write("                , '세 끼 다먹으면 살쪄요'\r\n");
      out.write("                , '처먹지를 말던가 살쪘다고 징징대지를 말던가'\r\n");
      out.write("                , '그 몸무게가 사람이냐? -강천성(짐승)'\r\n");
      out.write("                ,'먹는거? 귀찮아서요..'\r\n");
      out.write("                ,'간단해요. 그것이 흔들리면 지방이에요.'\r\n");
      out.write("                ,'땀은 지방이 흘리는 눈물이다.'\r\n");
      out.write("                ,'여우같이 되려면 돼지 같이 땀 흘려라'\r\n");
      out.write("                ,'승자는 길을 찾고, 패자는 핑계거리를 찾는다.'\r\n");
      out.write("                ,'다이어트는 식이조절 70%, 운동 30% 복근은 부엌에서 만들어진다.'\r\n");
      out.write("                ,'바라지만 말고 실천하라'\r\n");
      out.write("                ,'비만의 괴로움이 운동의 괴로움보다 훨씬 크다.'\r\n");
      out.write("                ,'기분 나쁜 날이 운동하기 좋은 날이다.'\r\n");
      out.write("                ,'입의 즐거움은 잠깐이지만, 엉덩이의 지방은 평생이다.'\r\n");
      out.write("                ,'한번 사는 인생이다. 폼나게 살고 싶지 않은가?'\r\n");
      out.write("                ,'남들이 사랑하길 바라기 전에 나부터 스스로를 사랑하자.'\r\n");
      out.write("                ,'먹어서 살이 찌는게 아니라 많이 먹어서 살이 찌는 것이다.'\r\n");
      out.write("                ,'나를 배부르게 하는 것들이 나를 괴롭힌다.'\r\n");
      out.write("                ,'체중은 반드시 아는만큼 빠진다.'\r\n");
      out.write("                ,'왜 영양가가 없는 쓰레기 음식을 입에 넣는가? 당신의 배는 쓰레기통이 아니다. 당신이 먹는 것이 곧 당신이다.'\r\n");
      out.write("                ,'식이 조절을 못하면 운동을 열심히 해봐야 소용없다'\r\n");
      out.write("                ,'뇌세포는 죽지만 비만세포는 죽지 않는다.'\r\n");
      out.write("                ,'날씬한 것만큼 맛있는 건 없다.'\r\n");
      out.write("                ,'죽을만큼 운동하고 죽지않을 만큼 먹었어요.'\r\n");
      out.write("                ,'진정한 여자는 태어나는 것이 아니라 만들어지는 것이다.'\r\n");
      out.write("                ,'다이어트란 체중감량이 아니라 사이즈의 축소이다.'\r\n");
      out.write("                ,'세상의 변화된 시선과 대우를 꿈꾸어라. 그 꿈을 현실로 만들어라'\r\n");
      out.write("                ,'실패는 일어설 수 있지만, 포기는 일어설 수 없다.'\r\n");
      out.write("                ,'아침은 공주처럼 점심은 시녀처럼 저녁은 거지처럼 먹어라'\r\n");
      out.write("                ,'배고플 때 자라 거짓 배고픔은 갈증으로 채워라'\r\n");
      out.write("                ,'먹기위해 사는 것이 아니다. 살기위해 먹는다는 것을 인지해라.'\r\n");
      out.write("                ,'맛과 멋은 음식 자체에만 존재한다. 몸에는 적용되지 않는다.'\r\n");
      out.write("                ,'몸매가 패션이고 몸이 스타일이다.'\r\n");
      out.write("                ,'돈주고 살찌는 것보다 남기는게 낫다.'\r\n");
      out.write("                ,'맛과 멋은 같이 갈 수 없다.'\r\n");
      out.write("                ,'먹어라 세상은 네가 돼지가 되든 말든 상관 안하지만 후회는 할 것이다.'\r\n");
      out.write("                ,'일하는 것을 귀찮아 하지 말고 먹는 것을 귀찮아 해라'\r\n");
      out.write("                ,'지금도 먹고 있는가? 그것은 지방이다.'\r\n");
      out.write("                ,'살찌는 건 한순간 살빼는건 피눈물'\r\n");
      out.write("                ,'인생을 걸고 다이어트를 해라'\r\n");
      out.write("                ,'하루에 3분, 거울 앞에서 냉철한 자기관리의 시간을 가져라'\r\n");
      out.write("                ,'살을 빼고 나면 살쪘던 것을 후회하게 된다.'\r\n");
      out.write("                ,'세상의 변화된 시선과 대우를 꿈꿔라'\r\n");
      out.write("                ,'이 정도는 먹어도 될 것이다라는 합리화나 자신에게 관대하지 마라'\r\n");
      out.write("                ,'세상에서 가장 안전한 성형은 다이어트이다.'\r\n");
      out.write("                ,'음식은 맛있을수록 칼로리도 높아지는 것이다.'\r\n");
      out.write("                ,'인생은 살이 쪘을 때와 안 쪘을 때로 나눠진다'\r\n");
      out.write("                ,'다이어트의 불편함이 다이어트 후의 편안함을 불러온다'\r\n");
      out.write("           \r\n");
      out.write("                \t\t];\r\n");
      out.write("            \r\n");
      out.write("            async function init() {\r\n");
      out.write("                const modelURL = URL + 'model.json';\r\n");
      out.write("                const metadataURL = URL + 'metadata.json';\r\n");
      out.write("\r\n");
      out.write("                console.log(modelURL);\r\n");
      out.write("                console.log(metadataURL);\r\n");
      out.write("                model = await tmImage.load(modelURL, metadataURL);\r\n");
      out.write("                console.log(model);\r\n");
      out.write("                maxPredictions = model.getTotalClasses();\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("            \r\n");
      out.write("            async function predict() {\r\n");
      out.write("            \t\r\n");
      out.write("            \tconsole.log('predict');\r\n");
      out.write("                var image = document.getElementById('imagePreview');\r\n");
      out.write("                console.log(image);\r\n");
      out.write("                const prediction = await model.predict(image, false);\r\n");
      out.write("                \r\n");
      out.write("\t\t\t\tvar maxProb = 0;\r\n");
      out.write("\t\t\t\tvar bestClassName;\r\n");
      out.write("\t\t\t\tvar randomLen = randomtxt.length;\r\n");
      out.write("\t\t\t\tvar randomContent = Math.round(Math.random()*(randomLen-1));\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                for (let i = 0; i < maxPredictions; i++) {\r\n");
      out.write("\t\t\t\t\tif(prediction[i].probability > maxProb) {\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t   maxProb = prediction[i].probability.toFixed(2)*100;\r\n");
      out.write("\t\t\t\t\t   bestClassName = prediction[i].className;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t   var labelObj = labeling[bestClassName];\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("                if (labelObj==null){\r\n");
      out.write("            \t\tconsole.log('음식 없음');\r\n");
      out.write("            \t\tdocument.getElementById('label-container').innerHTML = \"\";\r\n");
      out.write("                \tdocument.getElementById('description').value = \"\";\r\n");
      out.write("                }else{\r\n");
      out.write("                \tconsole.log(labelObj);\r\n");
      out.write("    \t\t\t\tconsole.log(bestClassName);\r\n");
      out.write("                    document.getElementById('label-container').innerHTML = bestClassName + ' : ' +labelObj.kcal +'kcal' +'<br>' + labelObj.comment + '<br><br><b>' + randomtxt[randomContent]  + '</b>';\r\n");
      out.write("                \tdocument.getElementById('description').value = bestClassName + ' : ' +labelObj.kcal +'kcal' +'<br>' + labelObj.comment + '<br><br><b>' + randomtxt[randomContent]  + '</b>';\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("            function readURL(input) {\r\n");
      out.write("                if (input.files && input.files[0]) {\r\n");
      out.write("                    var reader = new FileReader();\r\n");
      out.write("                    reader.onload = function (e) {\r\n");
      out.write("                    \t$('#imagePreview').removeAttr('style');\r\n");
      out.write("                    \t$('#imagePreview').attr('style', 'height: 300px; border-radius: 20px; margin: 20px');\r\n");
      out.write("                        $('#imagePreview').attr('src', e.target.result);\r\n");
      out.write("                        $('#imagePreview').hide();\r\n");
      out.write("                        $('#imagePreview').fadeIn(250);\r\n");
      out.write("                    };\r\n");
      out.write("                    reader.readAsDataURL(input.files[0]);\r\n");
      out.write("                    init().then(() => {\r\n");
      out.write("                        predict();\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            function showbutton(){\r\n");
      out.write("            \t\r\n");
      out.write("           \t\t$('#delbutton').removeAttr('style');\r\n");
      out.write("           \t\t$('#delbutton').attr('style', 'margin: 20px' )\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            function removebutton(){\r\n");
      out.write("           \t\t$('#delbutton').removeAttr('style');\r\n");
      out.write("           \t\t$('#delbutton').attr('style', 'display:none' );\t\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            function deleteimage(){\r\n");
      out.write("            \t$('#imagePreview').removeAttr('src');\r\n");
      out.write("            \t$('#imagePreview').attr('src','/crazy/resources/images/none.png');\r\n");
      out.write("            \t$('#imagePreview').attr('style','display:none');\r\n");
      out.write("            \tdocument.getElementById('label-container').innerHTML = \"\";\r\n");
      out.write("            \tdocument.getElementById('description').value = \"\";\r\n");
      out.write("            \tremovebutton();\r\n");
      out.write("            }\r\n");
      out.write("           \t\t\r\n");
      out.write("            \r\n");
      out.write("            function checkSubject(){\r\n");
      out.write("            \tvar subject = $('#subject').text();\r\n");
      out.write("            \tif (subject.equals('')){\r\n");
      out.write("            \t\talert('제목을 입력하세요');\r\n");
      out.write("            \t}\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            $('#imageUpload').change(function () {\r\n");
      out.write("                readURL(this);\r\n");
      out.write("                showbutton();\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#delbutton').click(function () {\r\n");
      out.write("            \t\r\n");
      out.write("            \tdeleteimage();\r\n");
      out.write("            \talert('삭제되었습니다.');\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            $('#change').click(function() {\r\n");
      out.write("            \tcheckSubject();\r\n");
      out.write("            \t\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/crazy/home.jsp(14,7) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/user/css/bootstrap.min.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/crazy/home.jsp(18,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/resources/user/js/bootstrap.min.js");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/crazy/home.jsp(62,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid==null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<a style=\"color: #D9418C\" href=\"login.do\">login</a>\r\n");
          out.write("\t\t\t\t<a style=\"color: #D9418C\" href=\"join.do\">join</a>\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t<b>");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.userid}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(" &nbsp;&nbsp;</b>\r\n");
          out.write("\t\t\t\t<a style=\"color: #D9418C\" href=\"logout.do\">logout</a>\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /WEB-INF/views/crazy/home.jsp(77,15) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/resources/icecream.jpg");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/crazy/crazywrite.jsp(101,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg=='error'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t<script type=\"text/javascript\">\r\n");
          out.write("\t\t\talert(\"내용을 입력하세요\");\r\n");
          out.write("\t\t</script>\r\n");
          out.write("\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
